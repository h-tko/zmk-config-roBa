#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &lt 5 I &kp O &kp P
                &kp A &lt 1 S &lt 2 D &lt 3 F &kp G &kp LEFT_SHIFT &mt LEFT_PARENTHESIS MINUS &lt 4 H &kp J &kp K &kp L &kp ENTER
                &mt LEFT_SHIFT Z &mt LA(LEFT_COMMAND) X &kp C &kp V &kp B &mt EXCLAMATION QUESTION &mt RIGHT_PARENTHESIS UNDERSCORE &kp N &kp M &kp COMMA &kp DOT &kp BACKSPACE
                &kp LCTRL &kp LEFT_ALT &kp LEFT_COMMAND &mt LS(LG(LCTRL)) LANG_HANJA &lt 1 SPACE &lt_to_layer_0 3 ESCAPE &kp DELETE &mt LEFT_SHIFT LC(SPACE) &kp CAPSLOCK
            >;
            sensor-bindings = <&scroll_up_down>;
        };

        NUM_FUN {
            bindings = <
                &kp MINUS &kp N7 &kp N8 &kp N9 &kp PLUS &kp F1 &kp F2 &kp F3 &kp F4 &kp F5
                &trans &kp NUMBER_4 &kp N5 &kp NUMBER_6 &kp ASTERISK &trans &kp F13 &kp F6 &kp F7 &kp F8 &kp F9 &kp DELETE
                &trans &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans &trans &trans &kp F10 &kp F11 &kp F12 &trans &kp BACKSPACE
                &trans &kp N0 &trans &trans &trans &trans &trans &kp ENTER &trans
            >;
        };

        SYMBOL {
            bindings = <
                &kp MINUS &kp KP_NUMBER_7 &kp KP_NUMBER_8 &kp KP_NUMBER_9 &kp PLUS &kp CARET &kp AMPERSAND &kp TILDE &kp COLON &kp SEMI
                &kp SLASH &kp KP_NUMBER_4 &trans &kp UNDERSCORE &kp MINUS &kp LC(LA(KP_NUMBER_0)) &kp UNDERSCORE &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp DOLLAR &kp PERCENT
                &mt LEFT_SHIFT KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp SLASH &kp ASTERISK &kp EQUAL &kp GRAVE &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_BRACE &kp RIGHT_BRACE &kp BACKSLASH
                &trans &trans &trans &trans &kp SINGLE_QUOTE &trans &trans &trans &kp PIPE
            >;
        };

        ARROW {
            bindings = <
                &kp ESCAPE &kp LC(LS(TAB)) &trans &kp LC(TAB) &trans &trans &trans &kp UP_ARROW &trans &trans
                &kp HOME &trans &trans &trans &kp END &trans &trans &trans &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp END
                &kp LEFT_SHIFT &kp LG(LS(LEFT_ARROW)) &trans &kp LG(LS(RIGHT_ARROW)) &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &mkp MB1 &mkp MB3 &mkp MB2 &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        SCROLL {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        layer_6 {
            bindings = <
                &trans &trans &trans &trans &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans &trans &bootloader &trans &trans &trans &trans &bt BT_CLR
                &trans &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR_ALL
            >;
        };
    };
};
